@using Microsoft.AspNetCore.Identity
@using DDAC_Assignment.Areas.Identity.Data

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using DDAC_Assignment.Models

@inject SignInManager<DDAC_AssignmentUser> SignInManager
@inject UserManager<DDAC_AssignmentUser> UserManager

@{
    string path = Context.Request.Path;
}

<link rel="stylesheet" href="~/css/IndexCSS.css" />

@if (SignInManager.IsSignedIn(User))
{
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Category.View)).Result.Succeeded)
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="Categories" asp-action="Index">
                <i class="mdi mdi-view-grid menu-icon"></i>
                <span class="menu-title">Category Management</span>
            </a>
        </li>
    }
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.News.View)).Result.Succeeded)
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="ManageNews" asp-action="Index">
                <i class="mdi mdi-newspaper menu-icon"></i>
                <span class="menu-title">News Management</span>
            </a>
        </li>
    }
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Advertisements.View)).Result.Succeeded)
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="Advertisements" asp-action="Index">
                <i class="mdi mdi-star-outline menu-icon"></i>
                <span class="menu-title">Advertisement Management</span>
            </a>
        </li>
    }
    @if (User.IsInRole("Admin"))
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="Role" asp-action="Index">
                <i class="mdi mdi-account-multiple-outline menu-icon"></i>
                <span class="menu-title">Role Management</span>
            </a>
        </li>
    }
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.User.View)).Result.Succeeded)
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="UserInfo" asp-action="Index">
                <i class="mdi mdi-account menu-icon"></i>
                <span class="menu-title">User Management</span>
            </a>
        </li>
    }
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ReadNews.Read)).Result.Succeeded)
    {
        @foreach (var item in Program.navigationItem)
        {
            @if (Program.selectedPage == item)
            {
                <li class="nav-item  d-flex align-items-end">
                    <a class="nav-link" id="@item" asp-area="" asp-route-page="@item" asp-controller="News" asp-action="Page">
                        <span class="menu-title">@item</span>
                    </a>
                </li>
            }
            else
            {
                <li class="nav-item  d-flex align-items-end">
                    <a class="nav-category" id="@item" asp-area="" asp-route-page="@item" asp-controller="News" asp-action="Page">
                        <span class="menu-title">@item</span>
                    </a>
                </li>
            }
        }
    }
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">
            <i class="mdi mdi-account-plus menu-icon"></i>
            <span class="menu-title">Register</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">
            <i class="mdi mdi-login menu-icon"></i>
            <span class="menu-title">Login</span>
        </a>
    </li>
}

